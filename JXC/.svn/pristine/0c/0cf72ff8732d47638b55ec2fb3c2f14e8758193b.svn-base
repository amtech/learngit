package com.jxc.web.user.ctrl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import org.apache.catalina.tribes.util.Arrays;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.jxc.core.exception.ServiceException;
import com.jxc.core.util.encrypt.MD5;
import com.jxc.web.login.service.LoginService;
import com.jxc.web.user.model.CounterEntity;
import com.jxc.web.user.model.UserEntity;
import com.jxc.web.user.service.CounterService;
import com.jxc.web.user.service.UserService;
/**
  @File:           UserCtl.java
  @Author:         WuF
  @Version:        v 1.0
  @Date:           2014年7月24日下午8:57:43
  @Description:	菜单Controller
 */
@Controller
@RequestMapping("user")
public class UserCtl {
	@Autowired
	private UserService userService;
	@Autowired
	private LoginService loginService;
	@Autowired
	private CounterService counterservice;
	
	/*@RequestMapping("/regist")
	public String regist(){
		return "regist";
	}
	
	@RequestMapping(value="/regist",method=RequestMethod.POST)
	public String regists(UserEntity users){
		System.out.println(users);
		userService.saveUser(users);
		return "login";
	}*/
	
	/**
	 * 列表初始页
	 * @return
	 */
	@RequestMapping("list")
	public String queryUser(){
		return "user/user_list";
	}
	
	/**
	 * 获取列表数据方法
	 * @return
	 */
	@RequestMapping("getList")
	public @ResponseBody String getUser(){
		List<UserEntity> list = new ArrayList<UserEntity>();
		list = userService.queryUser();
		String user = JSON.toJSONString(list);
		return user;
	}
	@RequestMapping(value="changepassword",method=RequestMethod.POST)
	public @ResponseBody String changepassword(String username,String password,String newpassword){
		MD5 md5 = new MD5();
		try {
			boolean result = loginService.validLogin(username,
					md5.getMD5ofStr(password));
			if(result){
				userService.updateUser(username,md5.getMD5ofStr(newpassword));
				return "1";
			}else{
				return "0";
			}
		} catch (ServiceException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return "0";
	}
	
	@RequestMapping(value="queryIsUserNameExist",method=RequestMethod.POST)
	public @ResponseBody String queryIsUserNameExist(String username){
		int i = userService.queryIsUserNameExist(username);
		if(i>0){
			return "0";
		}else{
			return "1";
		}
	}
	
	
	@RequestMapping(value="add")
	public String userAdd(Model model){
		 List<CounterEntity> listeounter = counterservice.getList();
	     model.addAttribute("counterlist",listeounter);
		
		return "user/user_add";
	}
	
	@RequestMapping(value="add",method=RequestMethod.POST)
	public @ResponseBody String userAddPost(UserEntity user){
		if(user.getBirth()==""){
			user.setBirth(null);
		}
		if(user.getEntrydate()==""){
			user.setEntrydate(null);
		}
		MD5 md5 = new MD5();
		user.setPassword(md5.getMD5ofStr(user.getPassword()));
		if("0001".equals(user.getGradetype())){
			Map map = new HashMap();
			map.put("countercode", user.getCounterid());
			List list = counterservice.getHeadId(map);
			String headid = list.get(0).toString();
			user.setHeadid(headid);
		}
		user.setId(UUID.randomUUID().toString().replace("-", ""));
		userService.saveUser(user);
		return "1";
	}
	
	@RequestMapping(value="discountday")
	public String userdiscountday(Model model){
		List<Map> list = userService.discountday();
		//System.out.println(list);
		model.addAttribute("list",list);
		return "user/user_discountday";
	}
	
	@RequestMapping(value="discountday",method=RequestMethod.POST)
	public @ResponseBody String updateDiscountday(String[] desc,String[] value){
		/*System.out.println(Arrays.toString(desc));
		System.out.println(Arrays.toString(value));*/
		Map map = new HashMap();
		//map.put("discountday", discountday);
		for(int i = 0;i<desc.length;i++){
			map.put("discountday", desc[i]);
			map.put("value", value[i]);
			userService.changediscountday(map);
			map.clear();
		}
		return "1";
	}
	
	public UserService getUserService() {
		return userService;
	}

	public void setUserService(UserService userService) {
		this.userService = userService;
	}
}
