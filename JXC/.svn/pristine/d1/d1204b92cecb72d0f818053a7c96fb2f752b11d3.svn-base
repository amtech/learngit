package com.jxc.web.login.ctrl;

import java.io.Serializable;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.alibaba.druid.util.StringUtils;
import com.jxc.core.exception.ActionException;
import com.jxc.core.util.Tracer;
import com.jxc.core.util.encrypt.MD5;
import com.jxc.web.login.service.LoginService;
import com.jxc.web.user.model.UserEntity;
import com.jxc.web.user.service.UserService;

/**
 * @FileName: LoginCtrl.java
 * @Author: WuF
 * @Version: 1.0
 * @Date: 2013-2-25上午8:56:01
 * @Description: 登录用action
 * @Others:
 * @FuntionList:
 * @History:
 * @Category:
 */
@Controller
public class LoginCtrl implements Serializable {

	private static final long serialVersionUID = 7455084105185303545L;

	@Autowired
	private LoginService loginService;
	
	@Autowired
	private UserService userService;
	
	@RequestMapping("/regist")
	public String regist(){
		return "regist";
	}
	
	@RequestMapping(value="/regist",method=RequestMethod.POST)
	public String regists(UserEntity users){
		System.out.println(users);
		users.setId(UUID.randomUUID().toString());
		userService.saveUser(users);
		return "";
	}
	
	@RequestMapping("/")
	public String Welcome(HttpServletResponse response) throws ActionException {
		return "welcome";
	}

	@RequestMapping("/login")
	public String validLogin(Model model,HttpServletResponse response ,String username,
			String password) throws ActionException {
		try {
			MD5 md5 = new MD5();
			boolean loginSituation = false;
			if (!StringUtils.isEmpty(username) && !StringUtils.isEmpty(password)) {
				loginSituation = loginService.validLogin(username,
						md5.getMD5ofStr(password));
			}

			if (!loginSituation) {
				return "welcome";
			}
			Tracer.trace(username);
		} catch (Exception e) {
			throw new ActionException("登录失败", e);
		}
		List<UserEntity> list = userService.saveUserInfo(username);
		for(UserEntity ue:list){
			model.addAttribute("gradetype",ue.getGradetype());
			model.addAttribute("id",ue.getId());
		}
		model.addAttribute("userinfo",list);
		return "view";
	}

	@RequestMapping("/index")
	public String index() {
		String a = "";
		return "hello";
	}
	
	
	public LoginService getLoginService() {
		return loginService;
	}

	public void setLoginService(LoginService loginService) {
		this.loginService = loginService;
	}
}
