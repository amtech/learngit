<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/mvc
     	   http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"
	default-autowire="byName">
	<!-- 自动扫描controller bean，把作了注解的类转换为bean -->
	<mvc:default-servlet-handler/>
    <context:component-scan base-package="com.jxc" />
    <!-- 激活 @Required @Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource 等标注 -->    
    <context:annotation-config/>  

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 需要静态访问的资源 -->
    <mvc:resources location="/pageview" mapping="/pageview/**"/>
    
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json</value>
            </list>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="fastJsonHttpMessageConverter" />
            </list>
        </property>
    </bean>
	<!-- 配置内容文件 -->
    <!-- 自动登录验证
    <mvc:interceptor>  
         	<mvc:mapping path="/**/*.htm" />
         	<mvc:mapping path="/**/*.jsp"/> 
            <bean id="htm" class="com.jxc.core.framework.authority.AuthorityInterceptor"/>
        </mvc:interceptor> 
    </mvc:interceptors>
	 -->
	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
		p:viewClass="org.springframework.web.servlet.view.JstlView"
		p:prefix="/WEB-INF/pages/"
		p:suffix=".jsp">
	</bean>
	<!-- 自定义exception处理 -->
	<bean id="exceptionResolver" class="com.jxc.core.exception.CommonExceptionHandler"/>
   <!-- 配置内容文件 -->
    <bean id="applicationProperties"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:ignoreResourceNotFound="true"
          p:fileEncoding="UTF-8">
        <property name="locations">
            <list>
                <value>classpath:properties/jdbc.properties</value>
            </list>
        </property>
    </bean>
    <bean id="log4j" class="com.alibaba.druid.filter.logging.Log4jFilter">
        <property name="statementExecutableSqlLogEnable" value="true" />
    </bean>
   <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="jdbc:mysql://relaxsky.mysql.rds.aliyuncs.com:3306/sky?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="username" value="relaxsky"/>
        <property name="password" value="relaxsky"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="log4j" />
    </bean>

    <!-- 事务  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- 添加Mybatis支持 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:ibatis-config.xml"/>
        <!-- 无需配置ibatis-config.xml中的mapper 由spring自动扫描加入 -->
        <property name="mapperLocations" value="classpath:com/jxc/ibatis/*.xml"/>
    </bean>
    
    <!-- 自动将映射接口转换为bean -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" 
        p:basePackage="com.jxc.web.**.dao"
        p:sqlSessionFactoryBeanName="sqlSessionFactory"/>

</beans>